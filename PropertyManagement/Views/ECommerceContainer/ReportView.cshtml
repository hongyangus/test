<!-- Load the datamodel -->
@model List<PropertyManagement.Models.ECommerceContainer>
<style>
    .text-wrap {
        white-space: normal;
    }

    .width-200 {
        width: 200px;
    }
</style>

@if (Model != null)
{
    <table id="datatable" class="display table compact nowrap">
        <caption style="text-align:center; font-weight:bold">@ViewBag.TableCaption</caption>
        <thead align="center">
            <tr>
                <th></th>
                <th></th>
                <th>
                    Container ID
                </th>
                <th>
                    Container Name
                </th>
                <th>
                    Container Number
                </th>
                <th>
                    Shipped Date
                </th>
                <th>
                    Estimate Arrival Date
                </th>
                <th>
                    Arrival Date
                </th>
                <th>
                    Unload Date
                </th>
                <th>
                    Market Date
                </th>
                <th>
                    Unload By
                </th>
                <th>
                    Unload Time Period
                </th>
                <th width="20%">
                    Notes
                </th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
        <tbody>
            @foreach (var row in Model)
                {
            <tr>
                <td>
                    @Html.ActionLink("Edit", "Edit", "ECommerceContainer", new { id = row.ContainerID }, null)
                </td>
                <td>
                    @Html.ActionLink("Delete", "Delete", "ECommerceContainer", new { id = row.ContainerID }, null)
                </td>
                <td class="dataTableLeft">
                    @row.ContainerID
                </td>
                <td class="dataTableLeft">
                    @row.ContainerName
                </td>
                <td class="dataTableLeft">
                    @row.ContainerNumber
                </td>
                <td class="dataTableLeft">
                    @row.ShippedDate.ToShortDateString()
                </td>
                <td class="dataTableLeft">
                    @row.EstimateArrivalDate.ToShortDateString()
                </td>
                <td class="dataTableLeft">
                    @row.ArrivalDate.ToShortDateString()
                </td>
                <td class="dataTableLeft">
                    @row.UnloadDate.ToShortDateString()
                </td>
                <td class="dataTableLeft">
                    @row.MarketDate.ToShortDateString()
                </td>
                <td class="dataTableLeft">
                    @row.UnloadBy
                </td>
                <td class="dataTableLeft">
                    @(string.Format("{0}hours", row.UnloadTimePeriod))
                </td>
                <td class="max-width:400px">
                    @row.Notes
                </td>
            </tr>
            }
        </tbody>
    </table>

    <!-- Modal Dialog for Showing Dx Report -->
    <div id="ReportModalDialog" class="modalDialog">
        <div class="modal-dialog" role="document">
            <div class="modal-header">
                <a href="#close" title="Close" class="close">X</a>
                <h4 class="modal-title" id="myModalLabel">Reimburse Expense</h4>
            </div>
            <div class="modal-body">
                <div style="width:400px">
                    @*<label>Transfer to Bank Account:</label>@Html.DropDownListFor(x => x.TransferedFinancialBankAccountID, Model.AllBankAccount, "Please Select Financial Account", new { @class = "form-control selectpicker" })*@
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>

    <div class="@ViewBag.MyExeptionCSS">@ViewBag.MyExeption</div>
    <script>
        // Script to execute when document is ready
        $(document).ready(function () {

            // Get the table caption (if there is one) for the report table
            var tablecaption = $("#datatable").find('caption').text();

            // Setup standard Datatable formatting
            $('#datatable').DataTable({
                "order": [],
                "searching": true,
                "paging": true,
                "scrollCollapse": true,
                "processing": false,
                "serverSide": false,
                "iDisplayLength": 25,
                dom: 'if<"savebuttons"B>tlp',
                buttons: [
                          {
                              extend: 'copy',
                              orientation: 'landscape',
                              message: tablecaption
                          },
                          {
                              extend: 'csv',
                              orientation: 'landscape',
                              message: tablecaption
                          },
                          {
                              extend: 'pdf',
                              orientation: 'landscape',
                              message: tablecaption
                          },
                          {
                              extend: 'excel',
                              title: tablecaption,
                              message: tablecaption,
                              sTitle: tablecaption
                          },
                          {
                              extend: 'print',
                              orientation: 'landscape',
                              message: tablecaption
                          }
                ],
                "language": {
                    loadingRecords: "Loading data, please wait...",
                    zeroRecords: "No data..."
                },
                "formatNumber": function (toFormat) { return toFormat.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","); },
                columnDefs: [
                              {
                                  render: function (data, type, full, meta) {
                                      return "<div class='text-wrap width-200'>" + data + "</div>";
                                  },
                                  targets: 10
                              }
                ],
                //start of totals data table
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        if (typeof i === 'number') {
                            return i;
                        }
                        else {
                            return i.replace(/[\$,]/g, '').replace(/[\)]/g, '').replace(/[\(]/g, '-') * 1;
                        }
                    };

                    // Total over all pages
                    total = api
                        .column(4)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(4, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);


                    // Update footer
                    $(api.column(4).footer()).html(
                        '$' + pageTotal.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') + ' ( $' + total.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') + ' total)'
                    );  // Total over all pages

                    total = api
                        .column(5)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(5, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);


                    // Update footer
                    $(api.column(5).footer()).html(
                        '$' + pageTotal.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') + ' ( $' + total.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,') + ' total)'
                    );
                } // End of totals data table

               // "bAutoWidth": true

            }); // End of document datatable

            $('#datatable td').css('white-space', 'initial');
        }); // End of document ready


    </script>
}
